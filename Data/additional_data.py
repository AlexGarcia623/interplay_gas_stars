import numpy as np

## De Rossi + (2018)
dr18_masses = np.array([
    9.202185792349727 ,
    9.491803278688524 ,
    9.830601092896174 ,
    10.120218579234972,
    9.169398907103824 ,
    9.497267759562842 ,
    9.819672131147541 ,
    10.114754098360654,
    10.464480874316939,
    9.087431693989071 ,
    9.448087431693988 ,
    9.803278688524589 ,
    10.163934426229506,
    10.48087431693989 ,
    10.715846994535518,
])

dr18_metals = np.array([
    -0.22863118127234705
    ,-0.07482965661472052
    ,0.01983404169196501
    ,0.12178371449773973
    ,-0.14723065506307775
    ,-0.06247048505700614
    ,0.06178236524320291
    ,0.13658503676718586
    ,0.19917695473250996
    ,-0.0832355123794104
    ,0.036173514133441165
    ,0.09137151723672654
    ,0.22065708695945463
    ,0.22884706199824556
    ,0.35288403157255577
])

dr18_avg_sSFR = np.array([-9.65, -10.11, -11.45])

## Gallazzi + (2005)
G05_masses = [8.929577464788732 ,
9.112676056338028 ,
9.309859154929578 ,
9.507042253521128 ,
9.704225352112676 ,
9.901408450704226 ,
10.014084507042254,
10.112676056338028,
10.281690140845072,
10.507042253521128,
10.704225352112676,
11.070422535211268,
11.35211267605634 ,
11.633802816901408,
11.901408450704226]

G05_metals = [
    -0.6047619047619046,
    -0.6142857142857143,
    -0.6476190476190475,
    -0.6047619047619046,
    -0.5190476190476192,
    -0.4190476190476191,
    -0.32380952380952377,
    -0.2333333333333334,
    -0.12380952380952392,
    -0.014285714285714346,
    0.038095238095238015,
    0.09047619047619043,
    0.11904761904761901,
    0.13809523809523805,
    0.14285714285714285
]

## Panter + (2008)
P08_masses = [
8.045045045045045 ,
8.126126126126126 ,
8.207207207207208 ,
8.288288288288289 ,
8.36936936936937  ,
8.441441441441441 ,
8.522522522522523 ,
8.603603603603604 ,
8.684684684684685 ,
8.765765765765765 ,
8.837837837837839 ,
8.91891891891892  ,
9.063063063063064 ,
9.162162162162163 ,
9.243243243243244 ,
9.324324324324325 ,
9.477477477477478 ,
9.558558558558559 ,
9.72072072072072  ,
9.801801801801801 ,
9.954954954954955 ,
10.036036036036037,
10.17117117117117 ,
10.342342342342342,
10.513513513513514,
10.666666666666668,
10.837837837837839,
11.108108108108109,
11.153153153153154,
11.396396396396398,
11.504504504504505,
11.621621621621621,
11.792792792792794,
11.864864864864865,
11.936936936936938
]

P08_metals = [
    -0.8095238095238095,
-0.8095238095238095,
-0.8476190476190475,
-0.8603174603174601,
-0.8793650793650791,
-0.8476190476190475,
-0.8603174603174601,
-0.8634920634920633,
-0.8444444444444446,
-0.7936507936507935,
-0.8412698412698412,
-0.7936507936507935,
-0.7555555555555555,
-0.7238095238095237,
-0.676190476190476,
-0.6507936507936507,
-0.5809523809523809,
-0.5142857142857141,
-0.4539682539682539,
-0.3936507936507935,
-0.3206349206349205,
-0.25396825396825384,
-0.18095238095238075,
-0.10793650793650789,
-0.05079365079365061,
-0.012698412698412542,
0.01269841269841282,
0.03809523809523824,
0.0412698412698414,
0.06984126984126998,
0.08571428571428585,
0.09841269841269856,
0.1269841269841271,
0.13650793650793663,
0.15238095238095256
]

## Cullen + (2019)
C19_masses = np.array([9.00574712643678 ,
                    9.35632183908046  ,
                    9.557471264367816 ,
                    9.718390804597702 ,
                    9.885057471264368 ,
                    10.241379310344827])
C19_metals = np.array([-0.9391891891891893
                       ,-0.935810810810811
                       ,-0.8513513513513513
                       ,-0.8614864864864866
                       ,-0.7128378378378379
                       ,-0.5810810810810811])

## Cashino + (2022)
K22_masses = np.array([
    8.807692307692307 ,
    11.192307692307693
])
K22_metals = np.log10( 10**np.array([ 
    -3.0212744572500667,
    -2.272815599035111
]) / 0.0127 )

## Output from toy model
hlines = np.array([0.02121659, 0.02234495, 0.02356813, 0.02489461, 0.02633317,
       0.027893  , 0.02958377, 0.03141581, 0.03340037, 0.03554987,
       0.03787824, 0.04040115, 0.04313635, 0.04610381, 0.0493259 ,
       0.05282746, 0.05663573, 0.06078034, 0.06529311, 0.07020794,
       0.07556058, 0.08138849, 0.08773057, 0.09462701, 0.10211897,
       0.1102483 , 0.11905717, 0.12858759, 0.13888086, 0.14997693,
       0.16191366, 0.17472604, 0.18844527, 0.2030978 , 0.21870426,
       0.2352783 , 0.25282535, 0.27134145, 0.29081205, 0.31121096,
       0.33249961, 0.35462654, 0.37752728, 0.40112469, 0.42532963,
       0.45004211, 0.47515281, 0.50054484, 0.52609585, 0.55168018,
       0.57717116, 0.60244329, 0.62737436, 0.65184726, 0.67575173,
       0.69898576, 0.72145687, 0.74308312, 0.76379406, 0.78353135,
       0.80224931, 0.81991512, 0.83650876, 0.85202265, 0.86646098,
       0.87983878, 0.89218076, 0.90351992, 0.9138962 , 0.923355  ,
       0.93194575, 0.93972067, 0.94673347, 0.9530384 , 0.95868932,
       0.96373897, 0.96823837, 0.97223643, 0.97577956, 0.97891147,
       0.98167306, 0.98410231, 0.9862343 , 0.98810126, 0.98973263,
       0.99115518, 0.99239318, 0.99346848, 0.99440072, 0.99520748,
       0.99590442, 0.99650549, 0.99702302, 0.99746792, 0.99784979,
       0.99817708, 0.99845717, 0.99869652, 0.99890078, 0.99907484])
vals   = 0.1*np.array([1.00000000e-01, 1.09749877e-01, 1.20450354e-01, 1.32194115e-01,
       1.45082878e-01, 1.59228279e-01, 1.74752840e-01, 1.91791026e-01,
       2.10490414e-01, 2.31012970e-01, 2.53536449e-01, 2.78255940e-01,
       3.05385551e-01, 3.35160265e-01, 3.67837977e-01, 4.03701726e-01,
       4.43062146e-01, 4.86260158e-01, 5.33669923e-01, 5.85702082e-01,
       6.42807312e-01, 7.05480231e-01, 7.74263683e-01, 8.49753436e-01,
       9.32603347e-01, 1.02353102e+00, 1.12332403e+00, 1.23284674e+00,
       1.35304777e+00, 1.48496826e+00, 1.62975083e+00, 1.78864953e+00,
       1.96304065e+00, 2.15443469e+00, 2.36448941e+00, 2.59502421e+00,
       2.84803587e+00, 3.12571585e+00, 3.43046929e+00, 3.76493581e+00,
       4.13201240e+00, 4.53487851e+00, 4.97702356e+00, 5.46227722e+00,
       5.99484250e+00, 6.57933225e+00, 7.22080902e+00, 7.92482898e+00,
       8.69749003e+00, 9.54548457e+00, 1.04761575e+01, 1.14975700e+01,
       1.26185688e+01, 1.38488637e+01, 1.51991108e+01, 1.66810054e+01,
       1.83073828e+01, 2.00923300e+01, 2.20513074e+01, 2.42012826e+01,
       2.65608778e+01, 2.91505306e+01, 3.19926714e+01, 3.51119173e+01,
       3.85352859e+01, 4.22924287e+01, 4.64158883e+01, 5.09413801e+01,
       5.59081018e+01, 6.13590727e+01, 6.73415066e+01, 7.39072203e+01,
       8.11130831e+01, 8.90215085e+01, 9.77009957e+01, 1.07226722e+02,
       1.17681195e+02, 1.29154967e+02, 1.41747416e+02, 1.55567614e+02,
       1.70735265e+02, 1.87381742e+02, 2.05651231e+02, 2.25701972e+02,
       2.47707636e+02, 2.71858824e+02, 2.98364724e+02, 3.27454916e+02,
       3.59381366e+02, 3.94420606e+02, 4.32876128e+02, 4.75081016e+02,
       5.21400829e+02, 5.72236766e+02, 6.28029144e+02, 6.89261210e+02,
       7.56463328e+02, 8.30217568e+02, 9.11162756e+02, 1.00000000e+03])